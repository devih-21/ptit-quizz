{"version":3,"sources":["Quizz.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Quizz","data","onChoice","SQuizz","className","question","answers","map","item","index","onClick","type","name","slugify","value","styled","div","list","App","useState","currentIndex","setCurrentIndex","userData","setUserData","console","log","SApp","ans","choice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o1gIAWe,SAASA,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SACpC,OACE,eAACC,EAAD,WACE,oBAAIC,UAAU,WAAd,SAA0BH,EAAKI,WAC/B,oBAAID,UAAU,UAAd,SACGH,EAAKK,QAAQC,KAAI,SAACC,EAAMC,GAAP,OAChB,oBACEL,UAAU,OAEVM,QAAS,WACPR,EAASO,IAJb,SAOE,kCACE,uBAAOE,KAAK,QAAQC,KAAMC,IAAQZ,EAAKI,UAAWS,MAAOL,IAAU,IACnE,mBAAGL,UAAU,YAAb,SAA0BI,QAPvBK,IAAQ,GAAD,OAAIZ,EAAKI,SAAT,aAAsBI,aAgB9C,I,EAAMN,EAASY,IAAOC,IAAV,iX,QC9BNC,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAwEdC,MAvDf,WAAgB,IAAD,EAC2BC,mBAAS,GADpC,mBACNC,EADM,KACQC,EADR,OAGmBF,qBAHnB,mBAGNG,EAHM,KAGIC,EAHJ,KAkBb,OAFAC,QAAQC,IAAI,WAAYH,GAGtB,eAACI,EAAD,WACE,cAAC1B,EAAD,CACEC,KAAMA,EAAKgB,EAAKG,IAChBlB,SAAU,SAACyB,GACTJ,EAAY,2BACPD,GADM,kBAERF,EAAe,CACdQ,OAAQD,SAKhB,sBAAKvB,UAAU,SAAf,UACGgB,EAAe,GACd,wBACEV,QAAS,WApBjBU,EAAe,GAAKC,EAAgBD,EAAe,IAmB7C,qBAQDA,EAAeH,EAAKY,OAAS,GAC5B,wBACEnB,QAAS,WAjCjBU,EAAeH,EAAKY,OAAS,GAAKR,EAAgBD,EAAe,IAgC3D,yCAeJM,EAAOX,IAAOC,IAAV,uGCjEKc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.153d00f9.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport slugify from \"slugify\";\nexport interface Props {\n  data: {\n    question: string;\n    answers: string[];\n    correct: number;\n  };\n  onChoice: (index: number) => void; // pick one ans\n}\n\nexport default function Quizz({ data, onChoice }: Props) {\n  return (\n    <SQuizz>\n      <h2 className=\"question\">{data.question}</h2>\n      <ul className=\"answers\">\n        {data.answers.map((item, index) => (\n          <li\n            className=\"item\"\n            key={slugify(`${data.question}__${index}`)}\n            onClick={() => {\n              onChoice(index);\n            }}\n          >\n            <label>\n              <input type=\"radio\" name={slugify(data.question)} value={index} />{\" \"}\n              <p className=\"item-text\">{item}</p>\n            </label>\n          </li>\n        ))}\n      </ul>\n    </SQuizz>\n  );\n}\n\nconst SQuizz = styled.div`\n  max-width: 600px;\n  display: block;\n  margin: 0 auto;\n  padding: 12px;\n\n  ul {\n    list-style: none;\n    li {\n      label {\n        cursor: pointer;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n        input[type=\"radio\"] {\n          margin-right: 12px;\n        }\n      }\n    }\n  }\n`;\n","import Quizz from \"./Quizz\";\nimport data from \"./data/atbm.json\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst list = [0, 1, 2, 4, 7, 23];\n// uuid\n// index\n\ntype userData = {\n  list: {\n    [key: number]: {\n      correct: number;\n      choice: number | null;\n    };\n  };\n  totalTime: number;\n  workTime: number;\n  score: number;\n  totalQuizz: number;\n};\n\nfunction App() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  \n  const [userData, setUserData] = useState<{\n    [key: number]: {\n      choice: number | null;\n    };\n  }>();\n\n  const onNext = () => {\n    currentIndex < list.length - 1 && setCurrentIndex(currentIndex + 1);\n  };\n\n  const onPrev = () => {\n    currentIndex > 1 && setCurrentIndex(currentIndex - 1);\n  };\n  console.log(\"userData\", userData);\n\n  return (\n    <SApp>\n      <Quizz\n        data={data[list[currentIndex]]}\n        onChoice={(ans) => {\n          setUserData({\n            ...userData,\n            [currentIndex]: {\n              choice: ans,\n            },\n          });\n        }}\n      />\n      <div className=\"handle\">\n        {currentIndex > 1 && (\n          <button\n            onClick={() => {\n              onPrev();\n            }}\n          >\n            Quay xe\n          </button>\n        )}\n        {currentIndex < list.length - 1 && (\n          <button\n            onClick={() => {\n              onNext();\n            }}\n          >\n            Chiến tiếp\n          </button>\n        )}\n      </div>\n    </SApp>\n  );\n}\n\nexport default App;\n\nconst SApp = styled.div`\n  .handle {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}